//- TODO: Consolidate header
doctype html
html
  head
    title undocumented.io
    //- TODO: Stop hotlinking this
    link(rel="stylesheet",href="https://rawgithub.com/twbs/bootstrap/v3.1.1/dist/css/bootstrap.min.css")
    style.
      blockquote {
        font-size: inherit;
        line-height: inherit;
      }

      img {
        max-width: 100%;
      }
  body
    div.container
      h1.text-center Clipper API

      :markdown
        **Resource**: http://clippercard.com/

        **Method**: Firebug, Charles Proxy

        **Research**: [research.html](research.html)

        ## General information
        A `JSESSIONID` cookie handles your session data and maintains state. Rendering involves [javax.faces][] which means that any form submission must various `javax.faces.*` fields in its form submission. `javax.faces.ViewState` is dynamic and effectively acts as a CSRF token.

        [javax.faces]: http://docs.oracle.com/javaee/6/api/javax/faces/package-summary.html

        > This has been written with no knowledge of `javax.faces` internals. If you know anything internally about it, please contribute.

        ## Login
        This is how authenticate with the web application.

        **URL**: https://www.clippercard.com/ClipperCard/needLogin.jsf

        *This is not the typical login form but it is easier to interact with.*

        Before submitting a login request, you must collect 2 pieces of information via a `GET` request to `URL`:

          - `JSESSIONID`, provided via `Set-Cookie` response header
              - Feel free to maintain cookies via a cookie jar that is shared across requests
              - This is documented in case you want to provide `Cookie` headers manually
          - `javax.faces.ViewState`, in the response HTML, there is an element with `id="javax.faces.ViewState"`. You must retrieve its value.

        To login, make a `POST` request with the following format:

        ```js
        request: {
          method: 'POST',
          url: 'https://www.clippercard.com/ClipperCard/needLogin.jsf',
          headers: {
            Cookie: 'JSESSIONID=' + JSESSIONID,
            'Faces-Request': 'partial/ajax',
            'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0'
          },
          // These form elements serialize into `mainForm=mainForm&mainForm%3AoUserName=todd%40twolfson.com&...`
          form: {
            mainForm: 'mainForm',
            'mainForm:oUserName': USERNAME,
            'mainForm:oPassword': PASSWORD,
            'javax.faces.ViewState': VIEW_STATE,
            'javax.faces.source': 'mainForm:orderCardLogin',
            'javax.faces.partial.event': 'click',
            'javax.faces.partial.execute': 'mainForm:orderCardLogin mainForm:loginComp',
            'javax.faces.partial.render': 'mainForm:loginComp',
            'javax.faces.behavior.event': 'action',
            'javax.faces.partial.ajax': 'true'
          }
        }
        ```

        Upon successful login, the response will have the format:

        **statusCode**: 200

        **body**:

        ```xml
        <?xml version='1.0' encoding='UTF-8'?>
        <partial-response><redirect url="dashboard.jsf"></redirect></partial-response>
        ```

        Upon failed login, the response will have the format:

        **statusCode**: 200

        **body**:

        ```xml
        <?xml version='1.0' encoding='utf-8'?>
        <partial-response><changes><update id="javax.faces.ViewState"><![CDATA[-1756984431596234131:-7595703900306249159]]></update></changes></partial-response>
        ```

        *The numbers above will be dynamic (They can also be both positive and negative).*

        ## Account information
        Once you are logged in, you can collect account information by scraping data from the dashboard.

        **URL**: https://www.clippercard.com/ClipperCard/dashboard.jsf

        When requesting the page via `GET`, you must still provide `JSESSIONID` via a `Cookie` header.

        ```js
        request: {
          method: 'GET',
          url: 'https://www.clippercard.com/ClipperCard/dashboard.jsf',
          headers: {
            Cookie: 'JSESSIONID=' + JSESSIONID,
            'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0'
          }
        }
        ```

        Expected response:

        ```html
        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
        <html xmlns="http://www.w3.org/1999/xhtml"><head><script id="f5_cspm">(functio...
        ```

        This has not been fully researched but it looks like the format of desired content is:

        ```html
        <div class="infoDiv">
          <div class="fieldName">Name on Account:</div>
          <div class="fieldData">Mr. Todd Wolfson</div>
        </div>
        ```

        To scrape, you should search for an HTML element containing `Name on Account:`. Then, look at its sibling element with the `fieldData` class for its content.
